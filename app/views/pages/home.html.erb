
<h1>Home</h1>
<div class="panel">
	<h3>System Stats</h3>
	
	<div class="panel_contents">
		<div id="attributes_table_smp_rep_2" class="attributes_table smp_rep">
		<table>
			<tbody>
			
			<tr>
				<th><b>Total Client count:</b></th>
				<td><%= @client_count %></td>
			</tr>	

			<tr>
				<th><b>Total SMP count:</b></th>
				<td><%= @smp_client_count %></td>
			</tr>	
			
			<tr>
				<th><b>Total Installation count:</b></th>
				<td><%= @installation_count %></td>
			</tr>	
			
			</tbody>
		</table>
		</div>
	</div>
</div>
	<p>
		<div id="clients_chart" style="width: 760px; height: 300px;"></div>
	</p>
	<p>
		<div id="installations_chart" style="width: 760px; height: 300px;"></div>
	</p>

<script type="text/javascript" charset="utf-8">
$(function () {
  new Highcharts.Chart({
    chart: { renderTo: 'clients_chart' },
    title: { text: 'Clients by Day' },
    xAxis: { type: 'datetime' },
    yAxis: {
      title: { text: 'Clients' }
    },
    tooltip: {
      formatter: function () {
        return Highcharts.dateFormat("%B %e %Y", this.x) + ': ' +
          Highcharts.numberFormat(this.y, 0);
      }
    }, 
	series: [{
	  pointInterval: <%= 1.day * 1000 %>,
	  pointStart: <%= 3.weeks.ago.at_midnight.to_i * 1000 %>,
	  data: <%= (3.weeks.ago.to_date..Date.today).map { |date| Client.count_on(date).to_f}.inspect %>
	 }]
  });
  
$(function () {
    var chart;

    $(document).ready(function() {

        var colors = Highcharts.getOptions().colors,
            categories = ["2012-01-01", 
               "2012-02-01", 
               "2012-03-01",
               "2012-04-01",
               "2012-05-01",
               "2012-06-01",
               "2012-07-01",
               "2012-08-01",
               "2012-09-01",
               "2012-10-01",
               "2012-11-01",
               "2012-12-01"],
            name = 'Installtion Types',
            data = [<%= @installations_volume_by_month.tr('"', '') %>];

   

        function setChart(name, categories, data, color) {

            chart.xAxis[0].setCategories(categories);

            chart.series[0].remove();

            chart.addSeries({

                name: name,

                data: data,

                color: color || 'white'

            });

        }

    

        chart = new Highcharts.Chart({

            chart: {
                renderTo: 'installations_chart',
                type: 'column'
            },

            title: {
                text: 'Installation Type spread'
            },

            subtitle: {
                text: 'Click the columns to view versions. Click again to view categories.'
            },

            xAxis: {
                categories: categories
            },

            yAxis: {
                title: {
                    text: 'Total installation count'
                }

            },

            plotOptions: {
                column: {
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function() {

                                var drilldown = this.drilldown;

                                if (drilldown) { // drill down
                                    setChart(drilldown.name, drilldown.categories, drilldown.data, drilldown.color);
                                } else { // restore
                                    setChart(name, categories, data);
                                }

                            }

                        }

                    },

                    dataLabels: {

                        enabled: true,

                        color: colors[0],

                        style: {

                            fontWeight: 'bold'

                        },

                        formatter: function() {

                            return this.y;

                        }

                    }

                }

            },

            tooltip: {

                formatter: function() {

                    var point = this.point,

                        s = this.x +':<b>'+ this.y +' installations</b><br/>';

                    if (point.drilldown) {

                        s += 'Click to view '+ point.category +' versions';

                    } else {

                        s += 'Click to return to browser categories';

                    }

                    return s;

                }

            },

            series: [{

                name: name,

                data: data,

                color: 'white'

            }],

            exporting: {

                enabled: false

            }

        });

    });

    
});


});
</script>